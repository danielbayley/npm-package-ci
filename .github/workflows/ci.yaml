# https://docs.github.com/actions/using-workflows/workflow-syntax-for-github-actions
name: CI
on:
  workflow_dispatch:
  push:
    branches: [main]

  workflow_call:
    inputs:
      node-version:
        description: Node.js version, or versions in CSV format.
        type: string

      test-reporter:
        description: Specify a node --test-reporter.
        type: string

      todo-annotate:
        description: Annotate tests marked .todo.
        type: boolean
        default: true

      todo-fail-warn:
        description: Show failed tests marked .todo as warnings.
        type: boolean
        default: true

      publish-script:
        description: Run the publish, release, or given package.* script.
        type: string
        default: false

jobs:
  Node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJSON(format('[{0}]', inputs.node-version || '20, 21, 22, 23, 24')) }}

    env: # https://nodejs.org/api/test.html#test-reporters
      NODE_OPTIONS: --test-reporter=spec --test-reporter-destination=stdout
      INPUT_TODO_ANNOTATE:  ${{ inputs.todo-annotate  }}
      INPUT_TODO_FAIL_WARN: ${{ inputs.todo-fail-warn }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Node.js ${{ matrix.node-version }} and dependencies
      id: node
      uses: danielbayley/npm-package-ci@main
      with:
        node-version:   ${{ matrix.node-version   }}
        test-reporter:  ${{ inputs.test-reporter  }}
        todo-annotate:  ${{ inputs.todo-annotate  }}
        todo-fail-warn: ${{ inputs.todo-fail-warn }}

    - name: Build
      id: build
      if: steps.node.outputs.build != 'undefined'
      run: ${{ steps.node.outputs.build }}

    - name: Run tests
      id: test
      if: steps.node.outputs.test != 'undefined'
      run: ${{ steps.node.outputs.test }}
      env:
        NODE_OPTIONS: ${{ env.NODE_OPTIONS }} ${{ steps.node.outputs.options }}

    - name: Publish
      if: inputs.publish-script != 'false' && steps.test.conclusion == 'success' && steps.node.outputs.publish != 'undefined'
      run: ${{ inputs.publish-script == 'true' && steps.node.outputs.publish || format('{0} run {1}', steps.node.outputs.package-manager, inputs.publish-script) }}

  Clean:
    runs-on: ubuntu-latest
    if: github.repository == format('{0}/{1}', github.repository_owner, 'npm-package-ci')
    steps:
    - name: Clean
      run: gh run delete `gh run list --workflow ci.yml --json databaseId --jq '.[0].databaseId'`
      continue-on-error: true
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO:  ${{ github.repository }}
