# https://docs.npmjs.com/cli/configuring-npm/package-json
$schema: https://json.schemastore.org/package
version: 0.0.0
name: node-test-reporter-github
description: Informative node --test reporter for GitHub Actions.
keywords:
- ci
- test
- github
- actions
- reporter

homepage: https://github.com/danielbayley/npm-package-ci/tree/main/packages/node--test-reporter-github#readme
repository: danielbayley/npm-package-ci
bugs: https://github.com/danielbayley/npm-package-ci/tree/main/packages/node--test-reporter-github/issues

author:
  name: Daniel Bayley
  email: daniel.bayley@me.com
  url: danielbayley.dev

license: MIT
funding: https://github.com/sponsors/danielbayley

private: true
type: module
imports:
  "#index": &index ./index.js
  "#lib": ./lib/index.js
  "#lib/*": ./lib/*.js
exports: *index
directories:
  build: &build build
  lib: &lib lib
  icons: &icons octicons
files:
- *index
- *lib
- *icons

engines:
  node: ">=20"
  pnpm: ">=10"
packageManager: pnpm@10.2.0

dependencies:
  "@actions/core": ^1.10.1
  "@danielbayley/node-test-parser": workspace:*

devDependencies:
  "@danielx/civet": &catalog catalog:default
  "@testing-library/dom": ^10.4.0
  capture-website-cli: ^4.0.0
  github-markdown-css: ^5.6.1
  jsdom: *catalog
  pageres-cli: ^8.0.0
  replace-in-file: *catalog
  yaml: *catalog

publishConfig:
  access: public
  directory: *build

scripts:
  prepare: yaml --single --json --indent ${TABSIZE:-2} < package.yaml > package.json
  pretest: pnpm prepare
  test: >-
    node
    --test-reporter spec
    --test-reporter-destination stdout
    --experimental-test-coverage
    --test test/unit.js

  prepublishOnly: |
    mkdir -p $npm_package_publishConfig_directory
    mv package.json $npm_package_publishConfig_directory
    cp $npm_package_files_0 $npm_package_publishConfig_directory
    cp $npm_package_files_1 $npm_package_publishConfig_directory
    cp $npm_package_files_2 $npm_package_publishConfig_directory

  version: |
    replace-in-file version:\ $npm_{old,new}_version package.yaml
    git commit --all --message $npm_package_version
  postversion: |
    git tag --annotate v$npm_package_version -m ""
    git push --follow-tags

  prerelease: git stash --all --include-untracked --keep-index --quiet
  release: pnpm test && pnpm version
  postrelease: pnpm publish && git stash pop --index --quiet
