# https://docs.github.com/actions/using-workflows/workflow-syntax-for-github-actions
name: npm Package CI
description: Simple CI for your npm packages.
author: Daniel Bayley
branding:
  icon: package
  color: red

inputs:
  node-version:
    description: Node.js version, or versions in CSV format.
    required: true

  test-reporter:
    description: Specify a node --test-reporter.

  todo-annotate:
    description: Annotate tests marked .todo.

  todo-fail-warn:
    description: Show failed tests marked .todo as warnings.

  ignore-scripts:
    description: Ignore lifecycle scripts on install.

outputs:
  package-manager:
    description: Detected package manager.
    value: ${{ steps.metadata.outputs.package-manager }}

  package-file:
    description: Detected package.* file.
    value: ${{ steps.metadata.outputs.package-file }}

  metadata:
    description: Project metadata from the package.* file.
    value: ${{ toJSON(steps.metadata.outputs) }}

  options:
    description: NODE_OPTIONS
    value: ${{ steps.metadata.outputs.options }}

  build:
    description: The scripts.build command.
    value: ${{ steps.metadata.outputs.build }}

  test:
    description: The scripts.test command.
    value: ${{ steps.metadata.outputs.test }}

  publish:
    description: The scripts.publish, scripts.release, or given script command.
    value: ${{ steps.metadata.outputs.publish }}

runs:
  using: composite
  steps:
  - id: pre
    uses: danielbayley/npm-package-ci/metadata@main
    with:
      working-directory: ${{ github.action_path }}

  - uses: pnpm/action-setup@v4
    with:
      package_json_file: ${{ steps.pre.outputs.package-file  }}
      version: ${{ steps.pre.outputs.package-manager-version }}
      run_install: false

  - uses: actions/setup-node@v4
    with:
      node-version: ${{ steps.pre.outputs.node-version }}
      cache-dependency-path: ${{ github.action_path }}/pnpm-lock.yaml

  - id: metadata
    working-directory: ${{ github.action_path }}
    shell: sh
    run: ${{ steps.pre.outputs.package-manager }} install
    env:
      INPUT_REPORTER: ${{ inputs.test-reporter }}

  # https://pnpm.io/installation
  - if: steps.metadata.outputs.package-manager == 'pnpm'
    uses: pnpm/action-setup@v4
    with:
      package_json_file: ${{ steps.metadata.outputs.package-file  }}
      version: ${{ steps.metadata.outputs.package-manager-version }}
      run_install: false

  # https://yarnpkg.com/getting-started/install
  - if: steps.metadata.outputs.package-manager == 'yarn' && inputs.node-version != 20
    shell: sh
    run: |
      command -v corepack || npm install --global corepack
      corepack enable

  - uses: actions/setup-node@v4
    with:
      node-version: ${{ inputs.node-version }}
      cache: ${{ steps.metadata.outputs.package-manager }}

  - if: inputs.test-reporter
    shell: sh
    run: ${{ steps.metadata.outputs.add }}

  - shell: sh
    run: ${{ steps.metadata.outputs.install }} ${{ inputs.ignore-scripts != 'false' && github.repository != format('{0}/{1}', github.repository_owner, 'npm-package-ci') && '--ignore-scripts' || '' }}
